
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { TABLES } from './schema';

const SUPABASE_URL = "https://tiakuneprywurazjmtqy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRpYWt1bmVwcnl3dXJhemptdHF5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNzYxNjUsImV4cCI6MjA1OTk1MjE2NX0.KyPNAiN9vxJzLy06REtLZ47rw5gLUzigWFPTPqWF14A";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Add helper functions for common queries
export const getApprovedDrivers = async () => {
  // Query for both 'approved' and 'available' status to ensure we get all possible drivers
  const { data, error } = await supabase
    .from(TABLES.DRIVERS)
    .select('*')
    .or('status.eq.approved,status.eq.available');
    
  if (error) throw error;
  return data;
};

export const getGpsEnabledTrucks = async () => {
  // Query for both 'available' and null assigned_driver_id to ensure we get all available trucks
  const { data, error } = await supabase
    .from(TABLES.TRUCKS)
    .select('*')
    .or('status.eq.available')
    .eq('gps_enabled', true)
    .is('assigned_driver_id', null);
    
  if (error) throw error;
  return data;
};
